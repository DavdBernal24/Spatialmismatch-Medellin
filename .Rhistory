#Required libraries
### To load and transform the data
library(readr)
library(dplyr)
library(reshape2)
### For maps
library(rgdal)
library(spdep)
## Working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
rm(list = ls())
source("New_Function_Public.R") #New function with the transport cost
##############################################################################
#-------------------------------------------------------------#
#        1. Loading Data                                      #
#                                                             #
#-------------------------------------------------------------#
## ----- Loading SIT map
sit_zones = readOGR("Data/Shapefiles/SITs_2017/SITzones2017.shp", layer = "SITzones2017") #Maps for 2017
sit_zones$matrix_order = c(1:nrow(sit_zones))
## ----- Employment
emp = read_csv("Base/emp2012.csv")
emp = emp[c("k","emp")]
## ----- Travel times
pub_times = read_csv("Base/travel_times_public_2012.csv")
travel_times = pub_times
colnames(travel_times) = sit_zones$Name
## ----- Roads Distances (BING)
travel_distances = read_csv("Base/bing_distances_matrix.csv")
#-------------------------------------------------------------#
#        2. Doing some transformations                        #
#                                                             #
#-------------------------------------------------------------#
div = travel_distances/travel_times
div[is.na(div)] <- 0
div[!is.finite(as.matrix(div))] = 0
prom <- mean(as.matrix(div))
d = read_csv("Base/mean_distance_border.csv")
d$time = (d$distance/1000)/prom
d$time2 = ifelse(d$time==0,mean(d$time),d$time)
for (i in 1:nrow(sit_zones)){
travel_times[i,i] <- d[i,3:3]
}
rm(div, prom, d, i)
## Costs (Average wage)
costs = read_csv("Base/costs_wmin.csv")
costs = costs[c("k","wmin2012")]
#-------------------------------------------------------------#
#        3. Computing TA                                      #
#                                                             #
#-------------------------------------------------------------#
### Loading data with the distances I want to compute the measure.
transport_cost = read_csv("Base/Transport_costs.csv")
#Keeping the vars I need for public 2017
transport_cost = subset(transport_cost, select = c(sito, sitd, cost_2012_public))
transport_cost = transport_cost %>%
rename(transpcost = cost_2012_public)
##Variables in transport cost as characters
transport_cost$sitd = as.character(transport_cost$sitd)
transport_cost$sito = as.character(transport_cost$sito)
## Loop to compute the measure
adjustment = 1
ipc = (89.08/76.27)
year = 2012
compute_ta_newcost(sit_zones, travel_times, travel_distances, costs, emp,
transport_cost,  adjustment, ipc, "tapub2012", "tapub2012_percap",
"Output/Results/", "New_Ta_Public_2012.csv" ,year)
### To load and transform the data
library(readr)
library(readxl)
library(dplyr)
library(tidyverse)
## Working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
rm(list = ls())
##############################################################################
#-------------------------------------------------------------#
#               1.Loading Results TA                          #
#                                                             #
#-------------------------------------------------------------#
##############################################################################
# Accessibility measures
Results_Private_2017 = read.csv("Output/Results/New_Ta_Private_2017.csv")
Results_Public_2017 = read.csv("Output/Results/New_Ta_Public_2017.csv")
Results_Private_2012 = read.csv("Output/Results/New_Ta_Private_2012.csv")
Results_Public_2012 = read.csv("Output/Results/New_Ta_Public_2012.csv")
# ID variable
Results_Private_2017$id = "private_2017"
Results_Public_2017$id = "public_2017"
Results_Public_2012$id = "public_2012"
Results_Private_2012$id = "private_2012"
#Renaming variables for the RBIND
names(Results_Private_2017) = c("k", "ta", "percap", "id")
names(Results_Public_2017) = c("k", "ta", "percap", "id")
names(Results_Private_2012) = c("k", "ta", "percap", "id")
names(Results_Public_2012) = c("k", "ta", "percap", "id")
#append
Results = rbind(Results_Private_2017, Results_Public_2017, Results_Private_2012, Results_Public_2012)
## Average Accessibility
Results_ta = Results %>%
group_by(id) %>%
summarise(mean_ta = mean(ta))
##Average percap Accessibility
Results_ta_percap = Results %>%
group_by(id) %>%
summarise(mean_percap = mean(percap))
# Merging both
Results = merge(Results_ta, Results_ta_percap, by = "id", all.x = TRUE)
View(Results)
### Project: Better or worse job accessibility? Understanding changes
#in spatial mismatch at the intra-urban level: evidence from  Medellín, Colombia
### Authors: David Bernal; Gustavo Garcia; Jorge Perez
### Code created by : David Bernal
### Last modification :
### Modified by:
#### Purpose: This code creates breaks for the new accessibility measure maps
## Required libraries
library(readr)
library(rgdal)
library(dplyr)
library(classInt)
## Working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
rm(list = ls())
#-------------------------------------------------------------#
#        1. Loading Data                                      #
#                                                             #
#-------------------------------------------------------------#
## A private
A_priv_2017 = read.csv("Output/Results/New_Ta_Private_2017.csv")
A_priv_2012 = read.csv("Output/Results/New_Ta_Private_2012.csv")
## A public
A_pub_2017 = read.csv("Output/Results/New_Ta_Public_2017.csv")
A_pub_2012 = read.csv("Output/Results/New_Ta_Public_2012.csv")
## Keeping the columns I need
A_priv_2017 = subset(A_priv_2017, select = c(tapriv2017, tapriv2017_percap))
names(A_priv_2017) = c("A2017", "Adj2017")
A_pub_2017 = subset(A_pub_2017, select = c(tapub2017, tapub2017_percap))
names(A_pub_2017) = c("A2017", "Adj2017")
A_priv_2012 = subset(A_priv_2012, select = c(tapriv2012, tapriv2012_percap))
names(A_priv_2012) = c("A2012", "Adj2012")
A_pub_2012 = subset(A_pub_2012, select = c(tapub2012, tapub2012_percap))
names(A_pub_2012) = c("A2012", "Adj2012")
#-------------------------------------------------------------#
#        2. Appending and Saving data for breaks              #
#                                                             #
#-------------------------------------------------------------#
## Now I need to append the bases
breaks_2017 = rbind(A_priv_2017, A_pub_2017)
breaks_2012 = rbind(A_priv_2012, A_pub_2012)
write.csv(breaks_2017, file = "Base/breaks_NewAccessibility_2017.csv", row.names = FALSE)
write.csv(breaks_2012, file = "Base/breaks_NewAccessibility_2012.csv", row.names = FALSE)
### Project: Better or worse job accessibility? Understanding changes
#in spatial mismatch at the intra-urban level: evidence from  Medellín, Colombia
### Authors: David Bernal; Gustavo Garcia; Jorge Perez
### Code created by : David Bernal
### Last modification :
### Modified by:
#### Purpose: This code creates breaks for the new accessibility measure maps
## Required libraries
library(readr)
library(rgdal)
library(dplyr)
library(classInt)
## Working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
rm(list = ls())
#-------------------------------------------------------------#
#        1. Loading Data                                      #
#                                                             #
#-------------------------------------------------------------#
## A private
A_priv_2017 = read.csv("Output/Results/New_Ta_Private_2017.csv")
A_priv_2012 = read.csv("Output/Results/New_Ta_Private_2012.csv")
## A public
A_pub_2017 = read.csv("Output/Results/New_Ta_Public_2017.csv")
A_pub_2012 = read.csv("Output/Results/New_Ta_Public_2012.csv")
## Keeping the columns I need
A_priv_2017 = subset(A_priv_2017, select = c(tapriv2017, tapriv2017_percap))
names(A_priv_2017) = c("A2017", "Adj2017")
A_pub_2017 = subset(A_pub_2017, select = c(tapub2017, tapub2017_percap))
names(A_pub_2017) = c("A2017", "Adj2017")
A_priv_2012 = subset(A_priv_2012, select = c(tapriv2012, tapriv2012_percap))
names(A_priv_2012) = c("A2012", "Adj2012")
A_pub_2012 = subset(A_pub_2012, select = c(tapub2012, tapub2012_percap))
names(A_pub_2012) = c("A2012", "Adj2012")
#-------------------------------------------------------------#
#        2. Appending and Saving data for breaks              #
#                                                             #
#-------------------------------------------------------------#
## Now I need to append the bases
breaks_2017 = rbind(A_priv_2017, A_pub_2017)
breaks_2012 = rbind(A_priv_2012, A_pub_2012)
write.csv(breaks_2017, file = "Base/breaks_NewAccessibility_2017.csv", row.names = FALSE)
write.csv(breaks_2012, file = "Base/breaks_NewAccessibility_2012.csv", row.names = FALSE)
#41. This code creates maps for the new accessibility measure
source("41_Maps_NewTA.R")
### Project: Better or worse job accessibility? Understanding changes
#in spatial mismatch at the intra-urban level: evidence from  Medellín, Colombia
### Authors: David Bernal; Gustavo Garcia; Jorge Perez
### Code created by : David Bernal
### Last modification :
### Modified by:
#### Purpose: This code computes the private transport accessibility measure using early time data and
# The new way of computing costs
# (5am to 9am)
#Required libraries
### To load and transform the data
library(readr)
library(dplyr)
library(reshape2)
### For maps
library(rgdal)
library(spdep)
## Working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
rm(list = ls())
source("RF_New_Function_Private.R") #New function with the transport cost
##############################################################################
#-------------------------------------------------------------#
#        1. Loading Data                                      #
#                                                             #
#-------------------------------------------------------------#
## ----- Loading SIT map
sit_zones = readOGR("Data/Shapefiles/SITs_2017/SITzones2017.shp", layer = "SITzones2017") #Maps for 2017
sit_zones$matrix_order = c(1:nrow(sit_zones))
## ----- Employment
emp = read_csv("Base/emp2012.csv")
## ----- Travel times
travel_times = read_csv("Base/travel_times_private_2012Early5.csv")
colnames(travel_times) = sit_zones$Name
## -----Distances through the roads
travel_distances = read_csv("Base/bing_distances_matrix.csv")
#-------------------------------------------------------------#
#        2. Some Transformations                              #
#                                                             #
#-------------------------------------------------------------#
## ----- Distance to the border
d = read_csv("Base/mean_distance_border.csv")
div = travel_distances/travel_times
div[is.na(div)] = 0
div[!is.finite(as.matrix(div))] = 0
prom = mean(as.matrix(div))
d$time = (d$distance/1000)/prom
d$time2 = ifelse(d$time==0,mean(d$time),d$time)
for (i in 1:nrow(sit_zones)){
travel_times[i,i] = d[i,3:3]
}
## Costs (Average wage)
costs = read_csv("Base/costs_wmin.csv")
costs = costs[c("k","wmin2012")]
#-------------------------------------------------------------#
#        3. Computing TA 2012                                 #
#                                                             #
#-------------------------------------------------------------#
### Loading data with the distances I want to compute the measure.
transport_cost = read_csv("Base/Transport_costs.csv")
#Keeping the vars I need for public 2017
transport_cost = subset(transport_cost, select = c(sito, sitd, cost_2012_private))
transport_cost = transport_cost %>%
rename(transpcost = cost_2012_private)
##Variables in transport cost as characters
transport_cost$sitd = as.character(transport_cost$sitd)
transport_cost$sito = as.character(transport_cost$sito)
## Loop to compute the measure
adjustment = 1
ipc = (89.08/76.27)
year = 2012
compute_ta_newcost(sit_zones, travel_times, travel_distances, costs, emp,
transport_cost,  adjustment, ipc, "tapriv2012", "tapriv2012_percap",
"Output/Results/", "New_Ta_Private_2012Early5.csv" ,year)
### Project: Better or worse job accessibility? Understanding changes
#in spatial mismatch at the intra-urban level: evidence from  Medellín, Colombia
### Authors: David Bernal; Gustavo Garcia; Jorge Perez
### Code created by : David Bernal
### Last modification :
### Modified by:
#### Purpose: This code computes the private transport accessibility measure using early time data and
# The new way of computing costs
# (5am to 9am)
#Required libraries
### To load and transform the data
library(readr)
library(dplyr)
library(reshape2)
### For maps
library(rgdal)
library(spdep)
## Working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
rm(list = ls())
source("New_Function_Private.R") #New function with the transport cost
##############################################################################
#-------------------------------------------------------------#
#        1. Loading Data                                      #
#                                                             #
#-------------------------------------------------------------#
## ----- Loading SIT map
sit_zones = readOGR("Data/Shapefiles/SITs_2017/SITzones2017.shp", layer = "SITzones2017") #Maps for 2017
sit_zones$matrix_order = c(1:nrow(sit_zones))
## ----- Employment
emp = read_csv("Base/emp2012.csv")
## ----- Travel times
travel_times = read_csv("Base/travel_times_private_2012Early5.csv")
colnames(travel_times) = sit_zones$Name
## -----Distances through the roads
travel_distances = read_csv("Base/bing_distances_matrix.csv")
#-------------------------------------------------------------#
#        2. Some Transformations                              #
#                                                             #
#-------------------------------------------------------------#
## ----- Distance to the border
d = read_csv("Base/mean_distance_border.csv")
div = travel_distances/travel_times
div[is.na(div)] = 0
div[!is.finite(as.matrix(div))] = 0
prom = mean(as.matrix(div))
d$time = (d$distance/1000)/prom
d$time2 = ifelse(d$time==0,mean(d$time),d$time)
for (i in 1:nrow(sit_zones)){
travel_times[i,i] = d[i,3:3]
}
## Costs (Average wage)
costs = read_csv("Base/costs_wmin.csv")
costs = costs[c("k","wmin2012")]
#-------------------------------------------------------------#
#        3. Computing TA 2012                                 #
#                                                             #
#-------------------------------------------------------------#
### Loading data with the distances I want to compute the measure.
transport_cost = read_csv("Base/Transport_costs.csv")
#Keeping the vars I need for public 2017
transport_cost = subset(transport_cost, select = c(sito, sitd, cost_2012_private))
transport_cost = transport_cost %>%
rename(transpcost = cost_2012_private)
##Variables in transport cost as characters
transport_cost$sitd = as.character(transport_cost$sitd)
transport_cost$sito = as.character(transport_cost$sito)
## Loop to compute the measure
adjustment = 1
ipc = (89.08/76.27)
year = 2012
compute_ta_newcost(sit_zones, travel_times, travel_distances, costs, emp,
transport_cost,  adjustment, ipc, "tapriv2012", "tapriv2012_percap",
"Output/Results/", "New_Ta_Private_2012Early5.csv" ,year)
### Project: Better or worse job accessibility? Understanding changes
#in spatial mismatch at the intra-urban level: evidence from  Medellín, Colombia
### Authors: David Bernal; Gustavo Garcia; Jorge Perez
### Code created by : David Bernal
### Last modification :
### Modified by:
#### Purpose: This code computes the public transport accessibility measure using early time data and
# The new way of computing costs
# (5am to 9am)
#Required libraries
### To load and transform the data
library(readr)
library(dplyr)
library(reshape2)
### For maps
library(rgdal)
library(spdep)
## Working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
rm(list = ls())
source("New_Function_Public.R") #New function with the transport cost
##############################################################################
#-------------------------------------------------------------#
#        1. Loading Data                                      #
#                                                             #
#-------------------------------------------------------------#
## ----- Loading SIT map
sit_zones = readOGR("Data/Shapefiles/SITs_2017/SITzones2017.shp", layer = "SITzones2017") #Maps for 2017
sit_zones$matrix_order = c(1:nrow(sit_zones))
## ----- Employment
emp = read_csv("Base/emp2012.csv")
emp = emp[c("k","emp")]
## ----- Travel times
pub_times = read_csv("Base/travel_times_public_2012Early5.csv")
travel_times = pub_times
colnames(travel_times) = sit_zones$Name
## ----- Roads Distances (BING)
travel_distances = read_csv("Base/bing_distances_matrix.csv")
#-------------------------------------------------------------#
#        2. Doing some transformations                        #
#                                                             #
#-------------------------------------------------------------#
div = travel_distances/travel_times
div[is.na(div)] <- 0
div[!is.finite(as.matrix(div))] = 0
prom <- mean(as.matrix(div))
d = read_csv("Base/mean_distance_border.csv")
d$time = (d$distance/1000)/prom
d$time2 = ifelse(d$time==0,mean(d$time),d$time)
for (i in 1:nrow(sit_zones)){
travel_times[i,i] <- d[i,3:3]
}
rm(div, prom, d, i)
## Costs (Average wage)
costs = read_csv("Base/costs_wmin.csv")
costs = costs[c("k","wmin2012")]
#-------------------------------------------------------------#
#        3. Computing TA                                      #
#                                                             #
#-------------------------------------------------------------#
### Loading data with the distances I want to compute the measure.
transport_cost = read_csv("Base/Transport_costs.csv")
#Keeping the vars I need for public 2017
transport_cost = subset(transport_cost, select = c(sito, sitd, cost_2012_public))
transport_cost = transport_cost %>%
rename(transpcost = cost_2012_public)
##Variables in transport cost as characters
transport_cost$sitd = as.character(transport_cost$sitd)
transport_cost$sito = as.character(transport_cost$sito)
## Loop to compute the measure
adjustment = 1
ipc = (89.08/76.27)
year = 2012
compute_ta_newcost(sit_zones, travel_times, travel_distances, costs, emp,
transport_cost,  adjustment, ipc, "tapub2012", "tapub2012_percap",
"Output/Results/", "New_Ta_Public_2012Early5.csv" ,year)
### Project: Better or worse job accessibility? Understanding changes
#in spatial mismatch at the intra-urban level: evidence from  Medellï¿½n, Colombia
### Authors: David Bernal; Gustavo Garcia; Jorge Perez
### Code created by : David Bernal
### Last modification :
### Modified by:
# REFEREE COMMENT ABOUT MORNING RUSH HOUR
### This code creates descriptives about the computations using morning rush data
# This code also uses the New accessibility data with the new transport cost function.
#Required libraries
# These libraries help you to read and transform data
library(readr)
library(dplyr)
library(stargazer)
## Working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
rm(list = ls())
##############################################################################
#-------------------------------------------------------------#
#               1.Loading data and doing                      #
#                 some transformations                        #
#-------------------------------------------------------------#
##Morning rush results
public_2012_morning = read.csv("Output/Results/New_Ta_Public_2012Early5.csv")
private_2012_morning = read.csv("Output/Results/New_Ta_Private_2012Early5.csv")
public_2012_morning = public_2012_morning %>%
rename(ta = tapub2012, ta_percap = tapub2012_percap)
private_2012_morning = private_2012_morning %>%
rename(ta = tapriv2012, ta_percap = tapriv2012_percap)
## Creating variables for the append
public_2012_morning$status = "morning"
private_2012_morning$status = "morning"
public_2012_morning$mode = "public"
private_2012_morning$mode = "private"
##Original results
public_2012 = read.csv("Output/Results/New_Ta_Public_2012.csv")
private_2012 = read.csv("Output/Results/New_Ta_Private_2012.csv")
public_2012 = public_2012 %>%
rename(ta = tapub2012, ta_percap = tapub2012_percap)
private_2012 = private_2012 %>%
rename(ta = tapriv2012, ta_percap = tapriv2012_percap)
## Creating variables for the append
public_2012$status = "original"
private_2012$status = "original"
public_2012$mode = "public"
private_2012$mode = "private"
#-------------------------------------------------------------#
#               2.Appending and Descriptives                  #
#                                                             #
#-------------------------------------------------------------#
# Creating a list
ta_measure = list(public_2012,public_2012_morning, private_2012, private_2012_morning)
## Appending
result = do.call(rbind, ta_measure)
result = result %>%
group_by(mode, status) %>%
summarize(across(c(ta, ta_percap), mean, na.rm = TRUE))
# Round the numeric columns in the dataset to 2 decimal places
result = result %>%
mutate(across(where(is.numeric), round, 2))
# Rename 'status' to 'Travel Time' rename Mode
result <- result %>%
rename(`Time of the Day` = status,
Accessibility = ta) %>%
mutate(Mode = ifelse(mode == "public", "Public", "Private")) %>%
select(Mode, `Time of the Day`, Accessibility, ta_percap) %>%
rename(`Adjusted Accessibility` = ta_percap)
result <- result %>%
mutate(`Time of the Day` = case_when(
`Time of the Day` == "original" ~ "Entire day",
`Time of the Day` == "morning" ~ "Morning",
TRUE ~ `Time of the Day`
))
# Generate the LaTeX table with stargazer
stargazer(result,
summary = FALSE,
rownames = FALSE,
title = "Accessibility with All Day Data and Morning Rush Data",
label = "tab:accessibility_per_mode_time",
style = "aer",
colnames = TRUE,
out = "Output/Tex/NewTA_AccessibilityEarly_per_mode_time.tex")
View(result)
