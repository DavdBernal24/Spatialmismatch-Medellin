install.packages("xml")
install.packages("XML")
install.packages("htmlwidgets")
install.packages("ggplot2")
install.packages("plotly")
install.packages("caTools")
install.packages(c("scales", "forecast", "zoo"))
Sys.which("make")
url = "https://cran.r-project.org/src/contrib/Archive/rgdal/rgdal_1.6-7.tar.gz"
install.packages(url, repos = NULL, type = 'source')
library(rgdal)
url = "https://cran.r-project.org/src/contrib/Archive/rgdal/rgdal_1.6-7.tar.gz"
install.packages(url, repos = NULL, type = 'source')
library(rgdal)
library(rgeos)
C:/Users/david/Documents/.Rprofile
.libPaths("C:/R/libs")
.libPaths()
url = "https://cran.r-project.org/src/contrib/Archive/rgdal/rgdal_1.6-7.tar.gz"
install.packages(url, repos = NULL, type = 'source')
install.packages(
"https://cran.r-project.org/bin/windows/contrib/4.0/rgdal_1.6-7.zip",
repos = NULL,
type = "binary"
)
url = "https://cran.r-project.org/src/contrib/Archive/rgdal/rgdal_1.5-16.tar.gz"
install.packages(url, repos = NULL, type = 'source')
url = "https://cran.r-project.org/src/contrib/Archive/rgdal/rgdal_1.5-16.tar.gz"
install.packages(url, repos = NULL, type = 'source')
install.packages("sp")
url = "https://cran.r-project.org/src/contrib/Archive/rgdal/rgdal_1.5-16.tar.gz"
install.packages(url, repos = NULL, type = 'source')
Sys.which("make")
install.packages("sp")
.libPaths()
.libPaths("C:/R/libs")
.libPaths()
.libPaths("C:/R/libs")
.libPaths()
.libPaths()
file.edit("~/.Rprofile")
.libPaths("C:/R/libs")
.libPaths()
Sys.getenv("R_LIBS_USER")
.libPaths()
R_LIBS_SITE="C:/R/libs"
options("install.lock"=FALSE)
libPaths()
libPaths()
libPaths()
libPaths()
.libPaths()
options("install.lock"=FALSE)
install.packages("sp")
file.edit("~/.Renviron")
R_LIBS_USER="C:/R/libs"
Sys.getenv("R_LIBS_USER")
sys.getenv("R_LIBS_USER")
Sys.getenv("R_LIBS_USER")
Sys.getenv("R_LIBS_USER")
install.packages("sp")
url = "https://cran.r-project.org/src/contrib/Archive/rgdal/rgdal_1.6-7.tar.gz"
install.packages(url, repos = NULL, type = 'source')
.libPaths()
url = "https://cran.r-project.org/src/contrib/Archive/rgdal/rgdal_1.6-7.tar.gz"
url = "https://cran.r-project.org/src/contrib/Archive/rgdal/rgdal_1.6-7.tar.gz"
install.packages(url, repos = NULL, type = 'source')
install.packages("sp")
url = "https://cran.r-project.org/src/contrib/Archive/rgdal/rgdal_1.6-7.tar.gz"
install.packages(url, repos = NULL, type = 'source')
install.packages("rgdal", repos="http://R-Forge.R-project.org")
install.packages("rgdal", repos="https://cloud.r-project.org/")
install.packages("rgdal", repos="https://cloud.r-project.org/")
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
Sys.which("make")
install.packages("jsonlite", type = "source")
install.packages("sp")
install.packages("rgdal", repos="https://cloud.r-project.org/")
install.packages("rgdal", repos="http://R-Forge.R-project.org")
url = "https://cran.r-project.org/src/contrib/Archive/rgdal/rgdal_1.5-15.tar.gz"
install.packages(url, repos = NULL, type = 'source')
install.packages("gdalUtilities")
install.packages("gdal", repos="http://R-Forge.R-project.org")
install.packages("proj", repos="http://R-Forge.R-project.org")
library(gdal)
install.packages("PROJ")
install.packages("PROJ", repos="http://R-Forge.R-project.org")
#Required libraries
# These libraries help you to read and transform data
library(readr)
library(dplyr)
library(stargazer)
## Working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
rm(list = ls())
##############################################################################
#-------------------------------------------------------------#
#               1.Loading data and doing                      #
#                 some transformations                        #
#-------------------------------------------------------------#
##Morning rush results
public_2012_above = read.csv("Output/Results/New_Ta_Public_2012abovemean.csv")
private_2012_above = read.csv("Output/Results/New_Ta_Private_2012abovemean.csv")
public_2012_above = public_2012_above %>%
rename(ta = tapub2012, ta_percap = tapub2012_percap)
private_2012_above = private_2012_above %>%
rename(ta = tapriv2012, ta_percap = tapriv2012_percap)
## Creating variables for the append
private_2012_above$status = "Above the Mean"
public_2012_above$status = "Above the Mean"
public_2012_above$mode = "public"
private_2012_above$mode = "private"
##Original results
public_2012 = read.csv("Output/Results/New_Ta_Public_2012onlycommune.csv")
private_2012 = read.csv("Output/Results/New_Ta_Private_2012onlycommune.csv")
public_2012 = public_2012 %>%
rename(ta = tapub2012, ta_percap = tapub2012_percap)
private_2012 = private_2012 %>%
rename(ta = tapriv2012, ta_percap = tapriv2012_percap)
## Creating variables for the append
public_2012$status = "Only Commune Variation"
private_2012$status = "Only Commune Variation"
public_2012$mode = "public"
private_2012$mode = "private"
#-------------------------------------------------------------#
#               2.Appending and Descriptives                  #
#                                                             #
#-------------------------------------------------------------#
# Creating a list
ta_measure = list(public_2012, public_2012_above, private_2012, private_2012_above)
## Appending
result = do.call(rbind, ta_measure)
result = result %>%
group_by(mode, status) %>%
summarize(across(c(ta, ta_percap), mean, na.rm = TRUE))
# Round the numeric columns in the dataset to 2 decimal places
result = result %>%
mutate(across(where(is.numeric), round, 2))
# Rename 'status' to 'Travel Time' rename Mode
result <- result %>%
rename(Sample = status,
Accessibility = ta) %>%
mutate(Mode = ifelse(mode == "public", "Public", "Private")) %>%
select(Mode, Sample, Accessibility, ta_percap) %>%
rename(`Adjusted Accessibility` = ta_percap)
result <- result %>%
mutate(Sample = case_when(
Sample == "Commune" ~ "Only Commune Variation",
Sample == "Above" ~ "Above Mean",
TRUE ~ `Time of the Day`
))
### Project: Better or worse job accessibility? Understanding changes
#in spatial mismatch at the intra-urban level: evidence from  Medellï¿½n, Colombia
### Authors: David Bernal; Gustavo Garcia; Jorge Perez
### Code created by : David Bernal
### Last modification :
### Modified by:
# REFEREE COMMENT ABOUT Sample Size
### This code creates descriptives about the computations using only commune travel time variation
# and j
#Required libraries
# These libraries help you to read and transform data
library(readr)
library(dplyr)
library(stargazer)
## Working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
rm(list = ls())
##############################################################################
#-------------------------------------------------------------#
#               1.Loading data and doing                      #
#                 some transformations                        #
#-------------------------------------------------------------#
##Morning rush results
public_2012_above = read.csv("Output/Results/New_Ta_Public_2012abovemean.csv")
private_2012_above = read.csv("Output/Results/New_Ta_Private_2012abovemean.csv")
public_2012_above = public_2012_above %>%
rename(ta = tapub2012, ta_percap = tapub2012_percap)
private_2012_above = private_2012_above %>%
rename(ta = tapriv2012, ta_percap = tapriv2012_percap)
## Creating variables for the append
private_2012_above$status = "Above the Mean"
public_2012_above$status = "Above the Mean"
public_2012_above$mode = "public"
private_2012_above$mode = "private"
##Original results
public_2012 = read.csv("Output/Results/New_Ta_Public_2012onlycommune.csv")
private_2012 = read.csv("Output/Results/New_Ta_Private_2012onlycommune.csv")
public_2012 = public_2012 %>%
rename(ta = tapub2012, ta_percap = tapub2012_percap)
private_2012 = private_2012 %>%
rename(ta = tapriv2012, ta_percap = tapriv2012_percap)
## Creating variables for the append
public_2012$status = "Only Commune Variation"
private_2012$status = "Only Commune Variation"
public_2012$mode = "public"
private_2012$mode = "private"
#-------------------------------------------------------------#
#               2.Appending and Descriptives                  #
#                                                             #
#-------------------------------------------------------------#
# Creating a list
ta_measure = list(public_2012, public_2012_above, private_2012, private_2012_above)
## Appending
result = do.call(rbind, ta_measure)
result = result %>%
group_by(mode, status) %>%
summarize(across(c(ta, ta_percap), mean, na.rm = TRUE))
# Round the numeric columns in the dataset to 2 decimal places
result = result %>%
mutate(across(where(is.numeric), round, 2))
# Rename 'status' to 'Travel Time' rename Mode
result <- result %>%
rename(Sample = status,
Accessibility = ta) %>%
mutate(Mode = ifelse(mode == "public", "Public", "Private")) %>%
select(Mode, Sample, Accessibility, ta_percap) %>%
rename(`Adjusted Accessibility` = ta_percap)
result <- result %>%
mutate(Sample = case_when(
Sample == "Commune" ~ "Only Commune Variation",
Sample == "Above" ~ "Above Mean",
TRUE ~ Sample
))
# Generate the LaTeX table with stargazer
stargazer(result,
summary = FALSE,
rownames = FALSE,
title = "Accessibility ",
label = "tab:accessibility_per_mode_pairsample",
style = "aer",
colnames = TRUE,
out = "Output/Tex/NewTA_Accessibility_pair_sample.tex")
View(result)
result = subset(result, select = c(- mode))
stargazer(result,
summary = FALSE,
rownames = FALSE,
title = "Accessibility ",
label = "tab:accessibility_per_mode_pairsample",
style = "aer",
colnames = TRUE,
out = "Output/Tex/NewTA_Accessibility_pair_sample.tex")
## Working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
rm(list = ls())
## -----------------------------------------------------
# 1. I find the equivalence of SIT zone in 2012 and 2017
source("1_shapes_equivalence.R", encoding = "utf-8")
# 4. This code filters the transportation modes and additionally filters the OD survey for 2012, it also compute
# the reported travel times
source ("4_EOD_2012.R")
install.packages("car")
# 4. This code filters the transportation modes and additionally filters the OD survey for 2012, it also compute
# the reported travel times
source ("4_EOD_2012.R")
install.packages("rstatix")
# 4. This code filters the transportation modes and additionally filters the OD survey for 2012, it also compute
# the reported travel times
source ("4_EOD_2012.R")
?identify_outliers
# These libraries help you to read and transform data
library(dplyr)
library(readxl)
library(readr)
library(rstatix)
# Library to work with spatial data
library(rgdal)
## Working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
rm(list = ls())
? identify_outliers
